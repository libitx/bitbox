defmodule <%= module_prefix %>.Repo.Migrations.CreateBitboxTable do
  use Ecto.Migration

  def up do
    # Create the Bitbox tx table
    create table(:bitbox_txns, primary_key: false) do
      add :id, :binary_id, primary_key: true
      add :txid, :string, primary_key: true
      add :rawtx, :binary
      add :channel, :string
      add :tags, {:array, :string}
      add :meta, :map
      add :data, :map
      add :status, :map
      add :block_hash, :string
      add :block_height, :integer
      add :search_vector, :tsvector
      add :mapi_attempt, :integer, default: 0
      add :mapi_attempted_at, :utc_datetime
      add :mapi_completed_at, :utc_datetime
      
      timestamps()
    end


    # Add indexes for common queries and full-text search
    create index(:bitbox_txns, [:txid])
    create index(:bitbox_txns, [:channel])
    create index(:bitbox_txns, [:tags], using: "GIN")
    create index(:bitbox_txns, [:search_vector], using: "GIN")
    create index(:bitbox_txns, [:block_height])
    create index(:bitbox_txns, [:mapi_attempt])
    create index(:bitbox_txns, [:inserted_at])


    # Create function for populating search vector
    execute """
      CREATE OR REPLACE FUNCTION bitbox_search_vector_trigger()
      RETURNS trigger AS $$
      BEGIN
        NEW.search_vector := 
          setweight(to_tsvector('pg_catalog.english', coalesce(NEW.meta->>'title', '')), 'A') ||
          setweight(to_tsvector('pg_catalog.english', coalesce(NEW.meta->>'description', '')), 'C') ||
          setweight(to_tsvector('pg_catalog.english', coalesce(NEW.meta->>'content', '')), 'D') ||
          setweight(to_tsvector('pg_catalog.english', coalesce(array_to_string(NEW.tags, ','), '')), 'B');
        RETURN NEW;
      END
      $$ LANGUAGE plpgsql
    """

    # Create trigger for updating search vector
    execute """
      CREATE TRIGGER bitbox_search_vector_update
      BEFORE INSERT OR UPDATE 
      ON bitbox_txns
      FOR EACH ROW
      EXECUTE PROCEDURE bitbox_search_vector_trigger();
    """
  end


  def down do
    drop table(:bitbox_txns)
    execute "DROP FUNCTION IF EXISTS bitbox_search_vector_trigger;"
  end

end